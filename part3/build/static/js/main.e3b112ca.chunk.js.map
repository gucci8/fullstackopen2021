{"version":3,"sources":["components/Filter.js","components/Persons.js","components/PersonForm.js","components/Notification.js","services/util.js","App.js","index.js"],"names":["Filter","props","value","filtCond","onChange","handler","Person","person","name","number","onClick","deletePerson","id","Persons","filtered","persons","filter","p","toLowerCase","includes","filtStr","map","PersonForm","onSubmit","addNew","newName","nameHandler","newNumber","numHandler","type","Notification","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","baseUrl","service","getAll","axios","get","then","response","data","create","newObject","post","del","delete","update","newObj","put","App","useState","setPersons","setNewName","setNewNumber","setFiltStr","msg","errorMessage","setErrorMessage","showError","setTimeout","useEffect","initialPersons","event","target","preventDefault","window","confirm","find","o","changedObj","returnedPerson","personObj","newPerson","concat","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e3b112ca.chunk.js","sourcesContent":["const Filter = (props) => (\r\n  <form>\r\n    filter shown with <input value={props.filtCond} onChange={props.handler} />\r\n  </form>\r\n);\r\n\r\nexport default Filter;\r\n","const Person = (props) => (\r\n  <tr key={props.person.id}>\r\n    <td>{props.person.name}</td>\r\n    <td>{props.person.number}</td>\r\n    <td><button onClick={props.deletePerson}>delete</button></td>\r\n  </tr>\r\n)\r\n\r\nconst Persons = (props) => {\r\n  const filtered = props.persons.filter((p) =>\r\n    p.name.toLowerCase().includes(props.filtStr.toLowerCase())\r\n  )\r\n\r\n  return (\r\n    <table>\r\n      <tbody>\r\n        {filtered.map((person) =>\r\n          <Person key={person.id} person={person} deletePerson={props.deletePerson(person.name, person.id)} />\r\n        )}\r\n      </tbody>\r\n    </table>\r\n    \r\n  )\r\n}\r\n\r\nexport default Persons;\r\n","const PersonForm = (props) => (\r\n  <form onSubmit={props.addNew}>\r\n    <div>\r\n      name: <input value={props.newName} onChange={props.nameHandler} />\r\n    </div>\r\n    <div>\r\n      number: <input value={props.newNumber} onChange={props.numHandler} />\r\n    </div>\r\n    <button type=\"submit\">add</button>\r\n  </form>\r\n);\r\n\r\nexport default PersonForm;\r\n","const Notification = ({ message, color }) => {\r\n    const style = {\r\n        color: color,\r\n        background: 'lightgrey',\r\n        fontSize: 20,\r\n        borderStyle: 'solid',\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        marginBottom: 10,\r\n      }\r\n\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div style={style}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst del = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObj) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObj)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst service = { getAll, create, del, update }\r\n\r\nexport default service","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter.js'\nimport Persons from './components/Persons.js'\nimport PersonForm from './components/PersonForm.js'\nimport Notification from './components/Notification.js'\nimport service from './services/util.js'\nimport './index.css'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filtStr, setFiltStr ] = useState('')\n  const [ errorMessage, setErrorMessage ] = useState({msg: null, color: 'red'})\n\n  const showError = (message, color) => {\n    setErrorMessage({msg: message, color: color})\n    setTimeout(() => {\n      setErrorMessage({msg: null})\n    }, 3000)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    if (persons.map(p => p.name).includes(newName)) {\n      if (window.confirm(`${newName} is already added to the phonebook, replace the old number with a new one?`)) {\n        const p = persons.find(o => o.name.includes(newName))\n        const changedObj = { ...p, number: newNumber }\n        service\n          .update(p.id, changedObj)\n          .then(returnedPerson => {\n            setPersons(persons.map(o => o.id !== p.id ? o : returnedPerson))\n            setNewName('')\n            setNewNumber('')\n            showError(`Changed ${returnedPerson.name}'s number`, 'green')\n          })\n      }\n      return\n    }\n\n    const personObj = { name: newName, number: newNumber }\n\n    service\n      .create(personObj)\n      .then(newPerson => {\n        setPersons(persons.concat(newPerson))\n        setNewName('')\n        setNewNumber('')\n        showError(`Added ${newPerson.name}`, 'green')\n      })\n  }\n\n\n  const deletePerson = (name, id) => {\n    return () => {\n      if (window.confirm(`Delete ${name}?`)) {\n        service\n          .del(id)\n          .then(() => {\n            setPersons(persons.filter(o => o.id !== id))\n            showError(`Removed ${name} successfully.`, 'green')\n          })\n          .catch(error => showError(`Information of ${name} has already been removed from server`, 'red'))\n      }\n    }\n  }\n\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFiltStrChange = (event) => {\n    setFiltStr(event.target.value)\n  }\n\n  useEffect(() => {\n    service\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification message={errorMessage.msg} color={errorMessage.color}/>\n\n      <Filter filtCond={filtStr} handler={handleFiltStrChange} />\n\n      <h3>Add a new</h3>\n\n      <PersonForm addNew={addPerson} newName={newName} nameHandler={handleNameChange} newNumber={newNumber} numHandler={handleNumberChange} />\n\n      <h3>Numbers</h3>\n\n      <Persons persons={persons} filtStr={filtStr} deletePerson={deletePerson} />\n      \n    </div>\n  )\n}\n\nexport default App","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport service from \"./services/util.js\";\n\nconst persons = service.getAll();\n\nReactDOM.render(<App persons={persons} />, document.getElementById(\"root\"));\n"],"sourceRoot":""}